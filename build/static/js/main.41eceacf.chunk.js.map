{"version":3,"sources":["components/getNewCoordinates.js","components/sizeAnimationContainer.js","components/Letter.js","components/EnterButton.js","components/App.js","serviceWorker.js","index.js"],"names":["getNewCoordinates","minTop","maxTop","minLeft","maxRight","currentSide","xDirection","yDirection","x","y","Math","random","sizeAnimationContainer","letterElement","windowWidth","window","innerWidth","windowHeight","innerHeight","offsetTop","offsetLeft","elementHeight","getBoundingClientRect","height","elementX","elementWidth","width","StyledLetter","styled","div","_templateObject","props","margin","borderColor","LetterWrapper","_templateObject2","Letter","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","moveElement","animationType","_this$state","state","currentLeftOrRight","currentTopOrBottom","animationTime","floor","newCoordinates","setState","flipAnimation","moveAnimation","animation","TweenLite","to","ease","Linear","easeNone","onComplete","returnToHome","endAnimation","_this$props","_sizeAnimationContain","isHome","_this2","_this$props2","data","react_default","a","createElement","ref","Component","Button","EnterButton_templateObject","WrapButton","EnterButton_templateObject2","EnterButton","buttonText","checkForHover","removeHover","onMouseEnter","onMouseLeave","onClick","NameWrapper","App_templateObject","ButtonWrapper","App_templateObject2","Wrapper","section","_templateObject3","App","home","components_Letter","components_EnterButton","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.41eceacf.chunk.js","sourcesContent":["const getNewCoordinates = (minTop, maxTop, minLeft, maxRight, currentSide) => {\n  let xDirection, yDirection, x, y;\n  // alternate sides\n  switch (currentSide) {\n    case \"left\":\n      xDirection = \"right\";\n      x = maxRight;\n      y = Math.random() * maxTop + minTop;\n      break;\n    case \"right\":\n      xDirection = \"left\";\n      x = minLeft;\n      y = Math.random() * maxTop + minTop;\n      break;\n    case \"top\":\n      yDirection = \"bottom\";\n      x = Math.random() * minLeft + maxRight;\n      y = minTop;\n      break;\n    case \"bottom\":\n      yDirection = \"top\";\n      x = Math.random() * minLeft + maxRight;\n      y = maxTop;\n      break;\n    default:\n      break;\n  }\n  return { x, y, xDirection, yDirection };\n};\n\nexport default getNewCoordinates;\n","const sizeAnimationContainer = letterElement => {\n  const windowWidth = window.innerWidth;\n  const windowHeight = window.innerHeight;\n  const { offsetTop, offsetLeft } = letterElement;\n  const elementHeight = letterElement.getBoundingClientRect().height;\n  const elementX = letterElement.getBoundingClientRect().x;\n  const elementWidth = letterElement.getBoundingClientRect().width;\n\n  return {\n    windowWidth,\n    windowHeight,\n    offsetTop,\n    offsetLeft,\n    elementHeight,\n    elementX,\n    elementWidth\n  };\n};\n\nexport default sizeAnimationContainer;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { TweenLite, Linear } from \"gsap\";\nimport getNewCoordinates from \"./getNewCoordinates\";\nimport sizeAnimationContainer from \"./sizeAnimationContainer\";\n\nconst StyledLetter = styled.div`\n  padding: 32px;\n  background-color: black;\n  color: white;\n  margin: ${props => props.margin}px;\n  border: 1px solid ${props => props.borderColor};\n  font-size: 22px;\n  font-weight: bold;\n`;\n\nconst LetterWrapper = styled.div``;\n\nclass Letter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      x: 0,\n      y: 0,\n      animationTime: 2,\n      minTop: 0,\n      maxTop: 0,\n      maxRight: 0,\n      minLeft: 0,\n      currentLeftOrRight: null,\n      currentTopOrBottom: null,\n      animationType: \"\",\n      endAnimation: false\n    };\n    // reference to the DOM node\n    this.letterElement = null;\n    // reference to the animation\n    this.animation = null;\n  }\n\n  componentDidMount() {\n    const {\n      animationType,\n      currentLeftOrRight,\n      currentTopOrBottom,\n      margin\n    } = this.props;\n\n    const {\n      windowWidth,\n      windowHeight,\n      offsetTop,\n      offsetLeft,\n      elementHeight,\n      elementX,\n      elementWidth\n    } = sizeAnimationContainer(this.letterElement);\n    this.setState({\n      minTop: -offsetTop - margin,\n      maxTop: windowHeight - elementHeight + margin - offsetTop,\n      maxRight: windowWidth - elementX - (elementWidth - margin),\n      minLeft: -offsetLeft - margin,\n      animationType,\n      currentLeftOrRight,\n      currentTopOrBottom\n    });\n  }\n\n  moveElement = animationType => {\n    const {\n      minTop,\n      maxTop,\n      minLeft,\n      maxRight,\n      currentLeftOrRight,\n      currentTopOrBottom\n    } = this.state;\n    const animationTime = Math.floor(Math.random() * 4) + 1;\n\n    if (animationType === \"x\") {\n      const newCoordinates = getNewCoordinates(\n        minTop,\n        maxTop,\n        minLeft,\n        maxRight,\n        currentLeftOrRight\n      );\n      const { x, y, xDirection } = newCoordinates;\n\n      this.setState({\n        x,\n        y,\n        animationTime,\n        currentLeftOrRight: xDirection,\n        animationType\n      });\n    } else if (animationType === \"y\") {\n      const newCoordinates = getNewCoordinates(\n        minTop,\n        maxTop,\n        minLeft,\n        maxRight,\n        currentTopOrBottom\n      );\n      const { x, y, yDirection } = newCoordinates;\n\n      this.setState({\n        x,\n        y,\n        animationTime,\n        currentTopOrBottom: yDirection,\n        animationType: \"y\"\n      });\n    }\n  };\n\n  flipAnimation = () => {\n    // alternate animation types\n    const { animationType } = this.state;\n\n    if (animationType === \"x\") {\n      this.moveElement(\"y\");\n    } else if (animationType === \"y\") {\n      this.moveElement(\"x\");\n    }\n  };\n  moveAnimation = () => {\n    this.animation = TweenLite.to(\n      this.letterElement,\n      this.state.animationTime,\n      {\n        x: this.state.x,\n        y: this.state.y,\n        ease: Linear.easeNone,\n        onComplete: this.flipAnimation\n      }\n    );\n  };\n\n  componentDidUpdate() {\n    if (this.props.isHome) {\n      this.returnToHome();\n    }\n    // check to see if isHome is false and endAnimation is true, means we left button\n    if (!this.props.isHome && this.state.endAnimation) {\n      this.setState({\n        endAnimation: false\n      });\n      this.flipAnimation();\n    }\n    // fires whenever component updates\n    this.moveAnimation();\n  }\n\n  returnToHome = () => {\n    if (this.state.x !== 0) {\n      this.setState({\n        x: 0,\n        y: 0,\n        animationTime: 0.5,\n        endAnimation: true\n      });\n    }\n  };\n\n  render() {\n    const { data, borderColor, isHome, margin } = this.props;\n\n    return (\n      <LetterWrapper isHome={isHome} ref={div => (this.letterElement = div)}>\n        <StyledLetter borderColor={borderColor} margin={margin}>\n          {data}\n        </StyledLetter>\n      </LetterWrapper>\n    );\n  }\n}\n\nexport default Letter;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.div`\n  color: white;\n  background-color: green;\n  padding: 20px 50px;\n  z-index: 100;\n  cursor: pointer;\n`;\n\nconst WrapButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nconst EnterButton = props => {\n  const { buttonText, checkForHover, removeHover } = props;\n  return (\n    <WrapButton>\n      <Button\n        onMouseEnter={checkForHover}\n        onMouseLeave={removeHover}\n        onClick={checkForHover}\n      >\n        {buttonText}\n      </Button>\n    </WrapButton>\n  );\n};\n\nexport default EnterButton;\n","import React, { Component } from \"react\";\nimport Letter from \"./Letter\";\nimport EnterButton from \"./EnterButton\";\nimport styled from \"styled-components\";\n\nconst NameWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  flex-wrap: wrap;\n`;\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  top: 0;\n`;\n\nconst Wrapper = styled.section`\n  height: 100vh;\n  overflow: hidden;\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      home: false,\n      margin: 20\n    };\n  }\n\n  checkForHover = () => {\n    this.setState({\n      home: true\n    });\n  };\n  removeHover = () => {\n    this.setState({\n      home: false\n    });\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <NameWrapper>\n          <Letter\n            data=\"R\"\n            borderColor=\"red\"\n            isHome={this.state.home}\n            animationType={\"y\"}\n            currentLeftOrRight={\"left\"}\n            currentTopOrBottom={\"top\"}\n            margin={this.state.margin}\n          />\n          <Letter\n            data=\"Y\"\n            borderColor=\"red\"\n            isHome={this.state.home}\n            animationType={\"x\"}\n            currentLeftOrRight={\"right\"}\n            currentTopOrBottom={\"top\"}\n            margin={this.state.margin}\n          />\n\n          <Letter\n            data=\"A\"\n            borderColor=\"red\"\n            isHome={this.state.home}\n            animationType={\"x\"}\n            currentLeftOrRight={\"left\"}\n            currentTopOrBottom={\"top\"}\n            margin={this.state.margin}\n          />\n          <Letter\n            data=\"N\"\n            borderColor=\"red\"\n            isHome={this.state.home}\n            animationType={\"y\"}\n            currentLeftOrRight={\"right\"}\n            currentTopOrBottom={\"bottom\"}\n            margin={this.state.margin}\n          />\n        </NameWrapper>\n        <NameWrapper>\n          <Letter\n            data=\"D\"\n            borderColor=\"red\"\n            isHome={this.state.home}\n            animationType={\"x\"}\n            currentLeftOrRight={\"right\"}\n            currentTopOrBottom={\"bottom\"}\n            margin={this.state.margin}\n          />\n          <Letter\n            data=\"U\"\n            borderColor=\"red\"\n            isHome={this.state.home}\n            animationType={\"y\"}\n            currentLeftOrRight={\"left\"}\n            currentTopOrBottom={\"bottom\"}\n            margin={this.state.margin}\n          />\n          <Letter\n            data=\"N\"\n            borderColor=\"red\"\n            isHome={this.state.home}\n            animationType={\"y\"}\n            currentLeftOrRight={\"right\"}\n            currentTopOrBottom={\"top\"}\n            margin={this.state.margin}\n          />\n          <Letter\n            data=\"T\"\n            borderColor=\"red\"\n            isHome={this.state.home}\n            animationType={\"y\"}\n            currentLeftOrRight={\"left\"}\n            currentTopOrBottom={\"top\"}\n            margin={this.state.margin}\n          />\n          <Letter\n            data=\"O\"\n            borderColor=\"red\"\n            isHome={this.state.home}\n            animationType={\"y\"}\n            currentLeftOrRight={\"right\"}\n            currentTopOrBottom={\"bottom\"}\n            margin={this.state.margin}\n          />\n          <Letter\n            data=\"N\"\n            borderColor=\"red\"\n            isHome={this.state.home}\n            animationType={\"y\"}\n            currentLeftOrRight={\"left\"}\n            currentTopOrBottom={\"bottom\"}\n            margin={this.state.margin}\n          />\n        </NameWrapper>\n        <ButtonWrapper>\n          <EnterButton\n            buttonText=\"Who am I?\"\n            checkForHover={this.checkForHover}\n            removeHover={this.removeHover}\n          />\n        </ButtonWrapper>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}